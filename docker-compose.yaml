version: '2'
services:
##### NGINX #####
  nginx_server:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    working_dir: /var/www
    ports:
      - "80:80"
      - "443:443"
    restart: always
    links:
      - dunamis
      - demo-selector
    depends_on:
      - dunamis
      - demo-selector
    volumes:
     - ./www:/var/www:rw
     - ./certbot:/certbot:ro
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/conf:/etc/letsencrypt:rw
      - ./www/certbot:/var/www/certbot:rw
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
##### DUNAMIS #####
  dunamis_1:
    build:
      context: .
      dockerfile: php/Dockerfile
    working_dir: /var/www/dunamis
    volumes:
      - ./www/dunamis:/var/www/dunamis:rw
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - database

  dunamis_2:
    build:
      context: .
      dockerfile: php/Dockerfile
    working_dir: /var/www/dunamis
    volumes:
      - ./www/dunamis:/var/www/dunamis:rw
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - database
##### SELECTOR #####
  demo-selector_1:
    build:
      context: .
      dockerfile: php/Dockerfile
    working_dir: /var/www/demo-selector
    volumes:
      - ./www/demo-selector:/var/www/demo-selector
    depends_on:
      - database

  demo-selector_2:
    build:
      context: .
      dockerfile: php/Dockerfile
    working_dir: /var/www/demo-selector
    volumes:
      - ./www/demo-selector:/var/www/demo-selector
    depends_on:
      - database

##### DATABASE #####  
  database:
    image: mysql:5.6
    volumes:
      - dbdata_demo_services:/var/lib/mysql
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - MYSQL_DATABASE=${DATABASE}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    ports:
      - "3340:3306"
volumes:
  dbdata_demo_services:
